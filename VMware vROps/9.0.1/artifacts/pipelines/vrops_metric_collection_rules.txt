##This pipeline needs customer_id or customerTag in context to run
%% stream = no and limit = 0
%%template_type="jinja"
%%start_inline_object name="context_dynamic_form" and type="data" and format="json"
{
    "formFieldList": [
        {
            "fieldId": "customer_tag",
            "label": "Tag of the customer",
            "required": false,
            "dataType": "string"
        }
    ]
}
%%end_inline_object
@dm:empty
    --> @dm:save name = "temp-customer-context"

{% set row = "" %}

   {% if customer_tag %}
      {% set customer_id = customer_id %}
      {% set customer_tag = customer_tag %}
      {% set customerTag = customer_tag %}
   {% elif customerTag %}
      {% set customer_id = customer_id %}
      {% set customer_tag = customerTag %}
   {% else %}
      {% set customer_id = '' %}
      {% set customer_tag = '' %}
   {% endif %}

--> @dm:empty
    --> @dm:save name = 'temp-variable-dataset'
    --> @dm:save name = 'temp-variable-dataset-interim'
    --> @dm:save name = 'temp-vmanage-sources'



--> @dm:empty
    --> @dm:save name = 'temp-variable-dataset'

--> @c:new-block
    --> @exec:get-input
    --> @dm:selectcolumns include = "Others"
    ## --> @dm:skip-pipeline-if-shape column_count = 0
    --> @dm:explode-json column="Others"
    --> @dm:rename-columns vrops_src_name = 'name'
    --> @dm:save name = 'temp-variable-dataset'




--> @c:new-block
    --> @dm:recall name = 'temp-variable-dataset'
    --> *exec:if-shape num_rows = 0
       --> @dm:empty
      {% if customer_tag %}
         --> #dm:query-persistent-stream type contains 'vrops' and (customerTag contains '{{customer_tag}}' ) with-input name = 'rda_secrets_meta' and limit= 0
      {% else %}
         --> #dm:query-persistent-stream type contains 'vrops' and ( customerTag is empty) with-input name = 'rda_secrets_meta' and limit= 0
      {% endif %}
       --> @dm:save name = 'temp-vcenter-sources'
       --> @dm:recall name = 'temp-vcenter-sources'




       --> @exec:for-loop num_rows = 1
          --> #dm:query-persistent-stream vrops_src_name contains '{%-raw-%}{{row["name"]}}{%-endraw-%}' and discovery_scope = 'yes' with-input name = 'vrops_on_boarded_devices' and limit= 0
          --> @dm:save name = 'temp-variable-dataset-interim' & append='yes' & return_appended_dataset = 'yes'
       --> @exec:end-loop

  --> @dm:recall name = 'temp-variable-dataset-interim'



       --> *exec:if-shape num_rows = 0
         --> @dm:recall name = 'temp-vcenter-sources'
         -->@dm:eval  discovery_scope = "'yes'"
         --> @dm:rename-columns vrops_src_name = 'name'
         --> @dm:save name = 'temp-variable-dataset'
         --> @dm:skip-pipeline-if-shape row_count = 0
      --> @exec:end-if



       --> *exec:if-shape num_rows > 0
         ##-->@dm:eval  discovery_scope = "'yes'"
         --> @dm:rename-columns vrops_src_name = 'name'
         --> @dm:save name = 'temp-variable-dataset'
      --> @exec:end-if
    --> @exec:end-if




##Add customer context to the dataset
--> @c:new-block
    --> @dm:recall name = 'temp-variable-dataset'
    --> @dm:eval customer_id =  "'{{ customer_id }}'"
    --> @dm:eval customer_tag =  "'{{ customer_tag }}'"
   --> @dm:save name = 'temp-variable-dataset'









--> @c:data-loop dataset='temp-variable-dataset' & columns = 'vrops_src_name,customer_id,customer_tag'
--> @dm:empty
    --> @dm:addrow metric_filter="metric_label contains '(CPU|Response|Memory|Utilization)'" and metric_source="me-apm"
    --> @dm:addrow metric_filter="metric_label contains '(cpu|memory|Memory|disk)'" and metric_source="me-apm"
    --> @dm:addrow metric_filter="help contains '(CPU|Response|Memory|Utilization)'" and metric_source="prometheus"
    --> @dm:addrow metric_filter="help contains '(cpu|memory|disk)'" and metric_source="prometheus"
    --> @dm:addrow metric_filter="(key matches '((mem|cpu|net)\|usage_average)' or key is 'diskspace|used')" and metric_source="vRops"
    --> @dm:addrow metric_filter='metric_id contains "builtin:service.ioTime" and asset_id in ["SERVICE-57A595D1763DEC45"]' and metric_source="dynatrace"
    --> @dm:eval customer_id =  "'$customer_id'" and customer_tag =  "'$customer_tag'" and vrops_src_name = "'$vrops_src_name'"
    --> @dm:save name='oia-metric_selection_rules'