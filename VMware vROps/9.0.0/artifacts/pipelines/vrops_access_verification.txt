##This pipeline needs customer_tag or customerTag in context
##If its not provided to the pipeline it does not run
%% stream = no and limit = 0

%%template_type="jinja"

%% import_src_type = "vrops"
%%start_inline_object name="context_dynamic_form" and type="data" and format="json"
{
    "formFieldList": [
        {
            "fieldId": "customer_tag",
            "label": "Tag of the customer",
            "required": false,
            "dataType": "string"
        }
    ]
}
%%end_inline_object

@dm:empty
    --> @dm:save name = "temp-customer-context"

{% set row = "" %}

   {% if customer_tag %}
      {% set customer_id = customer_id %}
      {% set customer_tag = customer_tag %}
      {% set customerTag = customer_tag %}
   {% elif customerTag %}
      {% set customer_id = customer_id %}
      {% set customer_tag = customerTag %}
   {% else %}
      {% set customer_id = '' %}
      {% set customer_tag = '' %}
   {% endif %}



   --> @dm:empty
    --> @dm:save name = 'temp-variable-dataset'
   --> @dm:save name = 'temp-vcenter-sources'
   --> @dm:save name = 'temp-variable-dataset-interim'



--> @c:new-block
    --> @exec:get-input
    --> @dm:selectcolumns include = "Others"
    ## --> @dm:skip-pipeline-if-shape column_count = 0
    --> @dm:explode-json column="Others"
    --> @dm:rename-columns vrops_src_name = 'name'
    --> @dm:save name = 'temp-variable-dataset'





--> @c:new-block
    --> @dm:recall name = 'temp-variable-dataset'
    --> *exec:if-shape num_rows = 0
       --> @dm:empty
       {% if customer_tag %}
         --> #dm:query-persistent-stream type contains 'vrops' and (customerTag contains '{{customer_tag}}') with-input name = 'rda_secrets_meta' and limit= 0
      {% else %}
         --> #dm:query-persistent-stream type contains 'vrops' and (customerTag is empty) with-input name = 'rda_secrets_meta' and limit= 0
      {% endif %}
       --> @dm:save name = 'temp-vcenter-sources'
       --> @dm:recall name = 'temp-vcenter-sources'


 --> @exec:for-loop num_rows = 1
          --> #dm:query-persistent-stream vrops_src_name contains '{%-raw-%}{{row["name"]}}{%-endraw-%}' and discovery_scope = 'yes' with-input name = 'vrops_on_boarded_devices' and limit= 0
          --> @dm:save name = 'temp-variable-dataset-interim' & append='yes' & return_appended_dataset = 'yes'
       --> @exec:end-loop
--> @dm:recall name = 'temp-variable-dataset-interim'


--> *exec:if-shape num_rows = 0
         --> @dm:recall name = 'temp-vcenter-sources'
         -->@dm:eval  discovery_scope = "'yes'"
         --> @dm:rename-columns vrops_src_name = 'name'
         --> @dm:save name = 'temp-variable-dataset'
      --> @exec:end-if

       --> *exec:if-shape num_rows > 0
         ##-->@dm:eval  discovery_scope = "'yes'"
         --> @dm:rename-columns vrops_src_name = 'name'
         --> @dm:save name = 'temp-variable-dataset'
      --> @exec:end-if
    --> @exec:end-if
##Add customer context to the dataset
--> @c:new-block
    --> @dm:recall name = 'temp-variable-dataset'
    --> @dm:eval customer_id =  "'{{customer_id}}'"
    --> @dm:eval customer_tag =  "'{{customer_tag}}'"
   --> @dm:save name = 'temp-variable-dataset'









## VMware vrops MetricsData
--> @c:data-loop dataset='temp-variable-dataset' & columns = 'vrops_src_name,customer_id,customer_tag'
    --> *$vrops_src_name:metric-list
    --> *exec:if-condition collection_status != 'Success'
       --> *dm:safe-filter * get source_ip as 'asset_ip',collection_status,collection_timestamp,reason
       --> @dm:map to = 'collection_timestamp' & func = 'time_now'
       --> @dm:eval bot_source_name = "'$vrops_src_name'"
       --> @dm:eval bot_source_type = "'vrops'"
       --> @dm:eval bot_name = "'vmetric-list'"
       --> @dm:eval customer_id = "'$customer_id'"
       --> @dm:eval customer_tag = "'$customer_tag'"
       --> @dm:save name="temp-packs_asset_inventory_collection_status" & append = 'yes'
       --> @rn:write-stream name = 'vrops_access_verification_status'
    --> @exec:end-if
    --> *exec:if-condition collection_status = 'Success'
       --> @dm:eval vrops_name = "'$vrops_src_name'"
       --> @dm:save name = 'temp-vmware_vcenter_summary_inventory' & append = 'yes'
       --> @dm:dedup columns = 'source_ip'
       --> *dm:safe-filter * get source_ip as 'asset_ip',collection_status,collection_timestamp,reason
       --> @dm:map attr = 'collection_timestamp' & func = 'ts_to_datetimestr' & unit = 'ms'
       --> @dm:eval bot_source_name = "'$vrops_src_name'"
       --> @dm:eval bot_source_type = "'vrops'"
       --> @dm:eval customer_id = "'$customer_id'"
       --> @dm:eval customer_tag = "'$customer_tag'"
       --> @dm:eval bot_name = "'metric-list'"
       --> @dm:save name="temp-packs_asset_inventory_collection_status" & append = 'yes'
       --> @rn:write-stream name = 'vrops_access_verification_status'
    --> @exec:end-if