##This pipeline needs customer_id or customerTag in context to run
%% stream = no and limit = 0
%%template_type="jinja"

%% import_src_type = "vrops"


%%start_inline_object name="context_dynamic_form" and type="data" and format="json"
{
    "formFieldList": [
        {
            "fieldId": "customer_tag",
            "label": "Tag of the customer",
            "required": false,
            "dataType": "string"
        }
    ]
}
%%end_inline_object



@dm:empty
    --> @dm:save name = "temp-customer-context"

{% set row = "" %}

   {% if customer_tag %}
      {% set customer_id = customer_id %}
      {% set customer_tag = customer_tag %}
      {% set customerTag = customer_tag %}
   {% elif customerTag %}
      {% set customer_id = customer_id %}
      {% set customer_tag = customerTag %}
   {% else %}
      {% set customer_id = '' %}
      {% set customer_tag = '' %}
   {% endif %}



--> @dm:empty
    --> @dm:save name = 'temp-variable-dataset'

--> @c:new-block
    --> @exec:get-input
    --> @dm:selectcolumns include = "Others"
    ## --> @dm:skip-pipeline-if-shape column_count = 0
    --> @dm:explode-json column="Others"
    --> @dm:rename-columns vrops_src_name = 'name'
    --> @dm:save name = 'temp-variable-dataset'




--> @c:new-block
    --> @dm:recall name = 'temp-variable-dataset'
    --> *exec:if-shape num_rows = 0
       --> @dm:empty
      {% if customer_tag %}
         --> #dm:query-persistent-stream type contains 'vrops' and (customerTag contains '{{customer_tag}}' ) with-input name = 'rda_secrets_meta' and limit= 0
      {% else %}
         --> #dm:query-persistent-stream type contains 'vrops' and ( customerTag is empty) with-input name = 'rda_secrets_meta' and limit= 0
      {% endif %}
       --> @dm:save name = 'temp-vcenter-sources'
       --> @dm:recall name = 'temp-vcenter-sources'




       --> @exec:for-loop num_rows = 1
          --> #dm:query-persistent-stream vrops_src_name contains '{%-raw-%}{{row["name"]}}{%-endraw-%}' and discovery_scope = 'yes' with-input name = 'vrops_on_boarded_devices' and limit= 0
          --> @dm:save name = 'temp-variable-dataset-interim' & append='yes' & return_appended_dataset = 'yes'
       --> @exec:end-loop

  --> @dm:recall name = 'temp-variable-dataset-interim'



       --> *exec:if-shape num_rows = 0
         --> @dm:recall name = 'temp-vcenter-sources'
         -->@dm:eval  discovery_scope = "'yes'"
         --> @dm:rename-columns vrops_src_name = 'name'
         --> @dm:save name = 'temp-variable-dataset'
      --> @exec:end-if



       --> *exec:if-shape num_rows > 0
         ##-->@dm:eval  discovery_scope = "'yes'"
         --> @dm:rename-columns vrops_src_name = 'name'
         --> @dm:save name = 'temp-variable-dataset'
      --> @exec:end-if
    --> @exec:end-if




##Add customer context to the dataset
--> @c:new-block
    --> @dm:recall name = 'temp-variable-dataset'
    --> @dm:eval customer_id =  "'{{ customer_id }}'"
    --> @dm:eval customer_tag =  "'{{ customer_tag }}'"
   --> @dm:save name = 'temp-variable-dataset'









## vm summary
--> @c:data-loop dataset='temp-variable-dataset' & columns = 'vrops_src_name,customer_id,customer_tag'
    --> *$vrops_src_name:vm-summary
    --> @dm:eval vrops_src_name = "'$vrops_src_name'" and customer_id = "'$customer_id'" and customer_tag = "'$customer_tag'"
 --> *exec:if-condition collection_status != 'Success'
      --> *dm:safe-filter * get source_ip as 'asset_ip',collection_status,collection_timestamp,reason,customer_id,customer_tag
       --> @dm:map to = 'collection_timestamp' & func = 'time_now'
       --> @dm:eval bot_source_name = "'$vrops_src_name'"
       --> @dm:eval bot_source_type = "'VROPs'"
       --> @dm:eval bot_name = "'vm-summary'"
       --> @dm:save name="temp-packs_asset_inventory_collection_status" & append = 'yes'
       --> @rn:write-stream name = 'vrops-asset-inventory-collection-status-stream'
    --> @exec:end-if

  --> *exec:if-condition collection_status = 'Success'
       --> @dm:eval vrops_name = "'$vrops_src_name'"

       --> @dm:map attr = 'collection_timestamp' & func = 'ts_to_datetimestr' & unit = 'ms'
       --> @dm:eval bot_source_name = "'$vrops_src_name'"
       --> @dm:eval bot_source_type = "'VROPs'"
       --> @dm:eval bot_name = "'vm-summary'"

    --> @dm:save name="temp-packs_asset_inventory_collection_status" & append = 'yes'
    --> @rn:write-stream name = 'vrops-asset-inventory-collection-status-stream'
  --> @exec:end-if
    --> @dm:save name='temp-vm-summary'







## filter metric selection rules
--> @c:new-block
    --> @dm:recall name='oia-metric_selection_rules'
    --> *dm:filter metric_source='vRops'
    --> @dm:selectcolumns include="^metric_filter$|^customer_id$|^customer_tag$|^vrops_src_name$"
    --> @dm:save name='temp-vrops-metric-selection-rules'

## metrics list
--> @c:data-loop columns="metric_filter,vrops_src_name,customer_id,customer_tag" and dataset='temp-vrops-metric-selection-rules'
    --> *$vrops_src_name:metric-list
    --> *dm:filter ($metric_filter)
    --> @dm:eval metric_id='key' and metric_name='name'
    --> @dm:eval vrops_src_name = "'$vrops_src_name'" and customer_id = "'$customer_id'" and customer_tag = "'$customer_tag'"
    --> @dm:save name='temp-vrops-metrics-list' and append='yes'
    --> @dm:save name='test1-vrops-metrics-list'






--> *exec:if-condition collection_status != 'Success'
      --> *dm:safe-filter * get source_ip as 'asset_ip',collection_status,collection_timestamp,reason,customer_id,customer_tag
       --> @dm:map to = 'collection_timestamp' & func = 'time_now'
       --> @dm:eval bot_source_name = "'$vrops_src_name'"
       --> @dm:eval bot_source_type = "'VROPs'"
       --> @dm:eval bot_name = "'metric-list'"
       --> @dm:save name="temp-packs_asset_inventory_collection_status" & append = 'yes'
       --> @rn:write-stream name = 'vrops-asset-inventory-collection-status-stream'
    --> @exec:end-if

  --> *exec:if-condition collection_status = 'Success'
       --> @dm:eval vrops_name = "'$vrops_src_name'"
       --> @dm:map attr = 'collection_timestamp' & func = 'ts_to_datetimestr' & unit = 'ms'
       --> @dm:eval bot_source_name = "'$vrops_src_name'"
       --> @dm:eval bot_source_type = "'VROPs'"
       --> @dm:eval bot_name = "'metric-list'"

    --> @dm:save name="temp-packs_asset_inventory_collection_status" & append = 'yes'
    --> @rn:write-stream name = 'vrops-asset-inventory-collection-status-stream'
  --> @exec:end-if











## create metrics list for each resource
--> @c:data-loop columns='metric_id,metric_name,unit,vrops_src_name,customer_id,customer_tag' and dataset='temp-vrops-metrics-list'
    --> @dm:recall name='temp-vm-summary'
    --> @dm:eval metric_id="'$metric_id'" and metric_label="'$metric_name'" and unit="'$unit'"
    --> @dm:map from='identifier' and to='resource_id'
    --> *dm:filter guest_ip_adress is not empty or guest_ip_adress is not 'none'
    --> @dm:map from='guest_ip_adress' and to='asset_id'
    --> @dm:map from='name' and to='asset_name'
    --> @dm:eval vrops_src_name = "'$vrops_src_name'" and customer_id = "'$customer_id'" and customer_tag = "'$customer_tag'"
    --> @dm:fixnull columns= 'unit' & value = 'Count' & apply_for_empty = 'yes'
    --> @dm:selectcolumns include='^asset_id$|^asset_name$|^resource_id$|^metric_id$|^metric_label$|^unit$|^vrops_src_name$|^customer_tag$|^customer_id$'
    --> @dm:save name='temp-oia-vrops-metrics-list' and append='yes'
    --> @dm:save name='test2-oia-vrops-metrics-list'

## create final metrics list for all resources
--> @c:new-block
    --> @dm:recall name='temp-oia-vrops-metrics-list'
    --> @dm:save name='oia-vrops-metrics-list'

--> @c:new-block

--> @c:data-loop dataset='oia-vrops-metrics-list' & columns='metric_id,resource_id,asset_id,asset_name,metric_label,unit,vrops_src_name,customer_id,customer_tag'
    --> @$vrops_src_name:metrics resource_id= '$resource_id' & metric_name='$metric_id' & timestamp is after -1 week & interval is '15min' and skip_on_error='yes'

    --> @dm:eval vrops_src_name = "'$vrops_src_name'" and customer_id = "'$customer_id'" and customer_tag = "'$customer_tag'"



--> *exec:if-condition rda_status != 'Success'
      --> *dm:safe-filter * get source_ip as 'asset_ip',collection_status,collection_timestamp,reason,customer_id,customer_tag
       --> @dm:map to = 'collection_timestamp' & func = 'time_now'
       --> @dm:eval bot_source_name = "'$vrops_src_name'"
       --> @dm:eval bot_source_type = "'VROPs'"
       --> @dm:eval bot_name = "'metric-list'"
       --> @dm:save name="temp-packs_asset_inventory_collection_status" & append = 'yes'
       --> @rn:write-stream name = 'vrops-asset-inventory-collection-status-stream'
    --> @exec:end-if

  --> *exec:if-condition rda_status = 'Success'
       --> @dm:eval vrops_name = "'$vrops_src_name'"
          --> @dm:rename-columns collection_status = 'rda_status'
              --> @dm:rename-columns collection_timestamp='timestamps'

       --> @dm:map attr = 'collection_timestamp' & func = 'ts_to_datetimestr' & unit = 'ms'
       --> @dm:eval bot_source_name = "'$vrops_src_name'"
       --> @dm:eval bot_source_type = "'VROPs'"
       --> @dm:eval bot_name = "'metrics'"


    --> @dm:save name="temp-packs_asset_inventory_collection_status" & append = 'yes'
    --> @rn:write-stream name = 'vrops-asset-inventory-collection-status-stream'
  --> @exec:end-if




    --> *dm:filter rda_status is 'Success'
    --> @dm:skip-block-if-shape row_count=0
    --> @dm:dropnull columns='timestamps,data'
    --> @dm:to-type columns='data' and type='float'
    --> *dm:filter data > 0.0
    --> @dm:skip-block-if-shape row_count=0
    --> @dm:rename-columns metric_timestamp='timestamps' & value='data'
    --> @dm:add-missing-columns columns='metric_source' and value='vROps'
    --> @dm:add-missing-columns columns='asset_id' and value='$asset_id'
    --> @dm:add-missing-columns columns='asset_name' and value='$asset_name'
    --> @dm:add-missing-columns columns='metric_id' and value='$metric_id'
    --> @dm:add-missing-columns columns='metric_label' and value='$metric_label'
    --> @dm:add-missing-columns columns='metric_name' and value='$metric_label'
    --> @dm:add-missing-columns columns='unit' and value='$unit'
    --> @dm:change-time-format columns='metric_timestamp' & from_format='ms' & to_format='%Y-%m-%dT%H:%M:%S'
    --> @dm:add-missing-columns columns='customer' and value='CFX'
    --> @dm:add-missing-columns columns='project_id' and value='6ae38aac-9e41-11ee-849c-0242ac14000b'
    --> @dm:eval vrops_src_name = "'$vrops_src_name'" and customer_id = "'$customer_id'" and customer_tag = "'$customer_tag'"
    --> @dm:selectcolumns include="^asset_id$|^asset_name$|^metric_id$|^metric_label$|^metric_name$|^metric_source$|^metric_timestamp$|^unit$|^value$|^customer$|^project_id$|^customer_id$|^customer_tag$"
    --> @rn:write-stream name='vrops_metrics_timeseries'
