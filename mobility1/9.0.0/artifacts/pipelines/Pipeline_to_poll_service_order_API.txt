%% stream = no and limit = 0

%% import_src_type = "restclient"

@exec:get-input
    --> @dm:eval filename ="script_name+'_'+current_time +'.txt'"
    --> @dm:eval minio_location = "'Bulkstats/'+script_name+'/'+current_time"
    --> @dm:eval key=key
    --> @dm:save name="temp-orderId"
    --> @dm:save name="orderId"

--> @c:data-loop dataset="temp-orderId" and columns="orderId,ingestion_id"
    --> @cisco-bpa:service-orders method="Get" and orderId ="$orderId" and api_version="v1.0"
    --> *exec:if-condition data_status=="In-process"
       --> *dm:filter data_status=="In-process"
       --> *exec:if-shape num_rows >0
          --> @dm:fail-if-shape row_count>0
       --> @exec:end-if
    --> @exec:end-if
    --> *exec:if-condition data_status=="Cancelled"
       --> *dm:filter data_status=="Cancelled"
       --> @dm:save name="temp_result_$ingestion_id"
       --> @dm:skip-pipeline-if-shape row_count >0
    --> @exec:end-if
    --> *exec:if-condition data_status=="Complete"
       --> *dm:filter data_status=="Complete"
       --> @dm:save name="temp-orderId-output"
    --> @exec:end-if

--> @c:new-block
    --> @dm:recall name="temp-orderId"
    --> @dm:enrich dict="pipeline_inputs" and src_key_cols="key" and dict_key_cols="key" and enrich_cols="bpa_server_api_key,bpa_server_url"
    --> @dm:save name="temp-orderId"

--> @c:data-loop dataset="temp-orderId" and columns="orderId,minio_location,filename,ingestion_id,bpa_server_api_key,bpa_server_url"
    --> @restclient:read url="$bpa_server_url/$orderId" and  method="GET" and  apiKey="$bpa_server_api_key"
    --> @dm:add-missing-columns columns="data"
    --> @dm:explode-json column="data"
    --> @dm:save name="temp-service-catalog-resp"
    --> @dm:add-missing-columns columns="configuredDevices"
    --> @dm:selectcolumns include="configuredDevices"
    --> @dm:explode-json column="configuredDevices"
    --> @dm:explode-json column="devices"
    --> @dm:save name="devices_result"
    --> @dm:add-missing-columns columns="scriptresponse"
    --> @dm:explode-json column="scriptresponse"
    --> @dm:eval ingestion_id ="'$ingestion_id'"
    --> @dm:enrich dict="temp-orderId" and src_key_cols="ingestion_id" and dict_key_cols="ingestion_id" and enrich_cols="script_name,script_type,devices,script_params,USER_ID,network_type,executed_time,current_time"
    --> @dm:save name="temp-email_inputs"
    --> *dm:filter executedCmd is not null
    --> @dm:skip-pipeline-if-shape row_count=0
    --> @dm:eval devicename = " 'Device:'+devicename"
    --> @dm:eval executedCmd = "'\n\tCommand: '+executedCmd"
    --> @dm:eval output_prefix  ="'\n\tOutput: '"
    --> @dm:eval output_suffix  ="'\n\n'"
    --> @dm:eval cmdOutPut = "cmdOutPut.replace('\n','\n\t\t\t')"
    ## --> @dm:eval cmdOutPut = "cmdOutPut[1:] if cmdOutPut[0]=='\n' else cmdOutPut"
    --> @dm:map from ="output_prefix,cmdOutPut,output_suffix" and to="cmdOutPut"
    --> @dm:eval cmdOutPut ='" ".join(cmdOutPut)'
    --> @dm:map from ="executedCmd,cmdOutPut" and to="script_result"
    --> @dm:eval script_result ='" ".join(script_result)'
    ## --> @dm:sort columns="devicename,script_result"
    --> @dm:save name="result_cb"
    --> @dm:implode key_columns='devicename'  and  merge_columns='script_result'  and merge_sep = '\n' and keep_columns="devices,devicename,orderId" and dedup_merge_values="no"
    --> @dm:map from ="devicename,script_result" and to="script_result"
    --> @dm:eval script_result ='" ".join(script_result)'
    --> @dm:implode key_columns='orderId'  and  merge_columns='script_result'  and merge_sep = '\n' and keep_columns="devices"
    --> @dm:eval filename="'$filename'"
    --> @dm:save name="Result_cb"
    --> @dm:save name="temp-parsed-response"
    --> @files:save-content-to-file filename_column = 'filename' &
            content_column = "script_result" &
            encoding_column = "text" and minio_location="$minio_location"

--> @c:data-loop dataset="temp-orderId" and columns="current_time,script_name"
    --> @dm:recall name="temp-service-catalog-resp" and return_empty ="yes"
    --> @dm:skip-pipeline-if-shape row_count = 0
    --> @dm:empty
    --> @dm:addrow script_name = "$script_name" and  updated_time="$current_time"
    --> @dm:add-missing-columns columns='iconURL' and value='Not Available'
    --> @dm:save name="temp-script-details"
    --> @rn:write-stream name= "Command_builder_result"

--> @c:data-loop dataset="temp-orderId" and columns="ingestion_id"
    --> @dm:recall name="temp-parsed-response" and return_empty="yes"
    --> @dm:selectcolumns include="orderId|script_result"
    --> @dm:skip-pipeline-if-shape row_count = 0
    --> @dm:eval ingestion_id ="'$ingestion_id'"
    --> @dm:enrich dict="temp-orderId" and src_key_cols="ingestion_id" and dict_key_cols="ingestion_id" and enrich_cols="emailId"
    --> @dm:add-missing-columns columns="emailId"
    --> *exec:if-condition emailId is not null
       --> @dm:enrich dict="temp-orderId" and src_key_cols="ingestion_id" and dict_key_cols="ingestion_id" and enrich_cols="script_name,script_type,devices,script_params,USER_ID,network_type,executed_time,current_time"
       --> *dm:filter script_result is not null
       --> @dm:skip-pipeline-if-shape row_count=0
       --> @dm:eval emailSubject= "script_name + ' Script Result'"
       --> @dm:save name="Result_cb"
       --> @email:sendmail-bulk recipient_col	="emailId"  and subject_col="emailSubject" and message_col	="script_result"
       --> @dm:selectcolumns exclude="emailSubject|script_result"
       --> @dm:eval email_status="'Successful'"
       --> @dm:eval execution_status ="'In Progress'"
       --> @dm:selectcolumns include="script_name|script_type|devices|script_params|USER_ID|network_type|executed_time|ingestion_id|execution_status|reason|emailId"
       --> @rn:write-stream name="command_builder_run_details"
    --> @exec:end-if

