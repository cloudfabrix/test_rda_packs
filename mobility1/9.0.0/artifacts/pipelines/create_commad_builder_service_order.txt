%% stream = no and limit = 0

%% import_src_type = "restclient,email_sender,cisco-bpa"

@exec:get-input
    --> @dm:save name="temp-cmd_input"
    --> @dm:eval script_params = "script_params if script_params != '[]' else None"
    --> @dm:selectcolumns include="script_name|script_type|devices|script_params|USER_ID|network_type|executed_time|ingestion_id|emailId|current_time"
    --> @dm:eval execution_status = "'In Progress'"
    --> @dm:save name="temp-command_builder_run_details"
    --> @rn:write-stream name="command_builder_run_details"

## Process input dataset and create dynamic payload for service order
--> @c:new-block
    --> @dm:recall name="temp-cmd_input"
    --> @dm:rename-columns `script-name`=script_name and `script-type` = script_type and  `script-params` = script_params
    --> @dm:eval devices = "[] if not devices else devices"
    --> *exec:if-condition network_type =="deviceList"
       --> @dm:eval devices = "devices.split(',') if devices else []"
       --> @dm:selectcolumns include="^devices$|^script-params$|^script-name$|^script-type$"
       --> @dm:to-json output_column="builder_input"
       --> @dm:save name="temp-final-input"
    --> @exec:end-if
    --> *exec:if-condition network_type =="All"
       --> @dm:eval devices = '["ALL"]'
       --> @dm:selectcolumns include="^devices$|^script-params$|^script-name$|^script-type$"
       --> @dm:to-json output_column="builder_input"
       --> @dm:save name="temp-final-input"
    --> @exec:end-if
    --> *exec:if-condition network_type in ['Consumer','Firstnet','Enterprise']
       --> @dm:replace-data columns = "network_type" and expr ="Firstnet" and replace="FirstNet"
       --> @dm:rename-columns `device-group-name`= network_type
       --> @dm:selectcolumns include="^devices$|^script-params$|^script-name$|^script-type$|^device-group-name$"
       --> @dm:to-json output_column="builder_input"
       --> @dm:save name="temp-final-input"
    --> @exec:end-if

--> @c:new-block
    --> @dm:recall name="temp-final-input" and return_empty= "yes"
    --> @dm:eval key="'key'"
    --> @dm:skip-pipeline-if-shape row_count=0
    --> @dm:enrich dict="temp-cmd_input" and src_key_cols="key" and dict_key_cols="key" and enrich_cols="filename,current_time,ingestion_id,executed_time,USER_ID"
    --> @dm:add-missing-columns columns="filename,current_time,ingestion_id,executed_time,USER_ID,device_group_name"
    --> @dm:fixcolumns
    --> @dm:save name="temp-final-input"

--> @c:new-block
    --> @dm:recall name="temp-final-input"
    --> @dm:enrich dict="pipeline_inputs" and src_key_cols="key" and dict_key_cols="key" and enrich_cols="bpa_service_order_id"
    --> @dm:save name="temp-final-input"

## call cisco BPA service order API to create service order for the commnd to execute
--> @c:data-loop dataset="temp-final-input" and columns="builder_input,script_name,current_time,bpa_service_order_id"
    --> @cisco-bpa:service-orders payload='{"formData":{"value":{"create":[{"command-builder-form":[$builder_input]}],"delete":[]}},"item":"command-builder-footprint","id":"$bpa_service_order_id"}' and method="POST" and api_version="v1.0"
    --> @dm:eval key="'key'"
    --> @dm:enrich dict="temp-final-input" and src_key_cols="key" and dict_key_cols="key" and enrich_cols="script_name,script_type,devices,script_params,USER_ID,device_group_name,executed_time,ingestion_id,current_time"
    ## --> @dm:eval minio_location = "'Bulkstats/$script_name/$current_time'"
    --> @dm:save name="temp-service-catalog-resp"

--> @c:new-block
    --> @dm:recall name="temp-command_builder_run_details"
    --> @dm:eval key="'key'"
    --> @dm:enrich dict="temp-service-catalog-resp" and src_key_cols="key" and dict_key_cols="key" and enrich_cols="orderId"
    --> @dm:selectcolumns include="script_name|script_type|devices|script_params|USER_ID|network_type|executed_time|ingestion_id|emailId|current_time|orderId|execution_status"
    --> @dm:save name="temp-command_builder_run_details"
    --> @rn:write-stream name="command_builder_run_details"

--> @c:new-block
    --> @dm:recall name="temp-service-catalog-resp"

