{
    "name": "incident-details-metrics",
    "label": "Metrics",
    "description": "Metrics",
    "version": "25.2.25.1",
    "enabled": true,
    "exportable": false,
    "dashboard_style": "auto",
    "dashboard_generator": {
        "attachment": "generator_jinja"
    },
    "status_poller": {},
    "dashboard_type": "template",
    "template_variables": {},
    "dashboard_filters": {
        "time_filter": true,
        "columns_filter": [],
        "default_time_range": {
            "from_time": "",
            "to_time": "",
            "label": "Incident Time"
        }
    },
    "dashboard_sections": [
        {
            "title": "Metrics",
            "show_filter": false,
            "projects": [],
            "widgets": []
        }
    ],
    "saved_time": "2025-02-25T10:10:03.050926",
    "attachments": [
        {
            "name": "generator_jinja",
            "value": "{% set ns = namespace() %}\r\n{% set query = \"project_id is '\" + projectid + \"' and incident_id is '\" + incidentid + \"'\" %}\r\n{% set incidentstream = \"oia-incidents-stream\" %}\r\n{% set incident_res = engine.query_stream_data(stream=incidentstream, cfxql_query=query) %}\r\n{% if incident_res is defined and incident_res|length > 0 %}\r\n  {% set incident = incident_res[0] %}\r\n  {% set metrics_stream = \"oia-ml-metrics-regression-output\" %}\r\n  {% set incident_occurance_time = incident.get(\"i_cfx_incident_occurred\", incident.get(\"i_created_ts\")) %}\r\n  {% set from_time = incident_occurance_time + ((-12)* 60 * 60 * 1000) %}\r\n  {% set from_time_str = to_datetime(from_time, unit='ms').isoformat() %}\r\n  {% set to_time =  incident_occurance_time + (4 * 60 * 60 * 1000) %}\r\n  {% set to_time_str = to_datetime(to_time, unit='ms').isoformat() %}\r\n  {% set timestamp_string = \"timestamp is after '\" + str(from_time_str) + \"' and timestamp is before '\" + str(to_time_str) + \"' \" %}\r\n  {% set x = logger.info(\"Got timestamp_string is: \" + str(timestamp_string)) %}\r\n  {% if timestamp_string %}\r\n    {% set x = dashboard[\"dashboard_filters\"][\"default_time_range\"].__setitem__(\"from_time\", str(from_time_str)) %}\r\n    {% set x = dashboard[\"dashboard_filters\"][\"default_time_range\"].__setitem__(\"to_time\", str(to_time_str)) %}\r\n    {% set config_items_str = incident.get(\"i_config_items\") %}\r\n    {% set asset_ids = [] %}\r\n    {% if config_items_str and \"metric_asset_id\" in config_items_str %}\r\n      {% set config_items = json_loads(config_items_str) %}\r\n      {% if \"alert_attributes\" in config_items %}\r\n        {% set alert_attributes_str = config_items.get(\"alert_attributes\") %}\r\n        {% if alert_attributes_str and \"metric_asset_id\" in alert_attributes_str %}\r\n          {% set alert_attributes = json_loads(alert_attributes_str) %}\r\n          {% if \"metric_asset_id\" in alert_attributes %}\r\n            {% set x = asset_ids.append(alert_attributes.get(\"metric_asset_id\")) %}\r\n            {% set x = logger.info(\"Added metric_asset_id \" + alert_attributes.get(\"metric_asset_id\") +\" for incident \" + incidentid + \" to list of eligible metric asset IDs\") %}\r\n          {% endif %}\r\n        {% endif %}\r\n      {% endif %}\r\n    {% endif %}\r\n\r\n    {% set alert_query = \"a_incident_id is '\" + incidentid + \"'\" %}\r\n    {% set alerts_res = engine.query_stream_aggs(stream=\"oia-alerts-stream\", cfxql_query=alert_query, aggs=[{\"field\": \"count_\", \"func\": \"max\"}], groupby=[\"a_en_metric_asset_id\"]) %}\r\n    {% set x = logger.debug(\"For incident \" + incidentid + \" found alerts:\" + json_dumps(alerts_res)) %}\r\n    {% for item in alerts_res %}\r\n      {% set metric_asset_id = item.get(\"a_en_metric_asset_id\") %}\r\n      {% if metric_asset_id not in asset_ids %}\r\n        {% set x = asset_ids.append(metric_asset_id) %}\r\n        {% set x = logger.debug(\"From alerts added metric_asset_id \" + metric_asset_id +\" for incident \" + incidentid + \" to list of eligible metric asset IDs\") %}\r\n      {% endif %}\r\n    {% endfor %}\r\n\r\n    {% if asset_ids %}\r\n      {% set asset_id_str = asset_ids|join(\"', '\") %}    \r\n      {% set asset_id_str = \"['\" + asset_id_str + \"']\" %}\r\n      {% set metrics_query = \"asset_id in \" + asset_id_str + \" and \" + timestamp_string + \" and anomaly_score is greater than 0\"%}\r\n      {% set metrics_res = engine.query_stream_aggs(stream=\"oia-ml-metrics-meta-output\", cfxql_query=metrics_query, aggs=[{\"field\": \"anomaly_score\", \"func\": \"max\"}], groupby=[\"asset_id\", \"metric_id\", \"metric_label\", \"unit\", \"metric_source\"], sorting=[{\"anomaly_score\":\"desc\"}]) %}\r\n      {% set x=logger.debug(\"metrics_res are: \" + str(metrics_res)) %}\r\n      {% for item in metrics_res %}\r\n        {% set asset_id = item.get(\"asset_id\") %}\r\n        {% set metric_id = item.get(\"metric_id\") %}\r\n        {% set metric_label = item.get(\"metric_label\") %}\r\n        {% set unit = item.get(\"unit\") %}\r\n        {% set metric_source = item.get(\"metric_source\") %}\r\n        {% set data_filter = \"asset_id is '\" + asset_id + \"' and metric_id is '\" + metric_id + \"' and \" + timestamp_string %}\r\n        {% set anomalies_filter = \"asset_id is '\" + asset_id + \"' and metric_id is '\" + metric_id + \"' and \" + timestamp_string + \" and anomalies_type is 'upper' and anomalies_severity is 'High' \"  %}\r\n        \r\n        {% set widget = {\r\n          \"title\": asset_id + \" - \" + metric_label,\r\n          \"widget_type\": \"timeseries_multisource\",\r\n          \"max_width\": 12,\r\n          \"height\": 5,\r\n          \"min_width\": 12,\r\n          \"fixTimeWindow\": True,\r\n          \"xAxisLabel\": \"Timestamp\",\r\n          \"yAxisLabel\": unit,\r\n          \"static_markers\": [\r\n              {\r\n                  \"timestamp\": incident_occurance_time,\r\n                  \"message\": \"Incident Occurred\",\r\n                  \"color\": \"#B71C1C\"\r\n              }\r\n          ],\r\n          \"chartProperties\": {\r\n              \"xAxisLabel\": \"Timestamp\",\r\n              \"yAxisLabel\": unit,\r\n              \"legendLocation\": \"bottom\",\r\n              \"xAxisTickOrientation\": \"STAGGERED\",\r\n              \"mode\": \"zoom\",\r\n              \"options\": {\r\n                  \"elements\": {\r\n                      \"line\": {\r\n                          \"borderWidth\": 1\r\n                      },\r\n                      \"point\": {\r\n                          \"radius\": 2,\r\n                          \"hitRadius\": 3,\r\n                          \"hoverRadius\": 3\r\n                      }\r\n                   }\r\n              },\r\n              \"dashboards\": [\r\n                  {\r\n                      \"action\": {\r\n                          \"permission\": \"rda:user_dashboard:view\",\r\n                          \"appName\": \"user-dashboard/oia-war-room\",\r\n                          \"identifier\": \"launch.dashboard.oia-war-room\",\r\n                          \"title\": \"War Room\",\r\n                          \"type\": \"GO_TO_APP_STATE\"\r\n                      },\r\n                      \"context\": {}\r\n                  }\r\n              ]\r\n          },\r\n          \"sources\": [\r\n              {\r\n                  \"source_label\": \"upper_anomaly\",\r\n                  \"stream\": \"oia-ml-metrics-regression-output\",\r\n                  \"hide_lines\": true,\r\n                  \"ts_column\": \"timestamp\",\r\n                  \"color\": \"#ff0000\",\r\n                  \"extra_filter\": anomalies_filter,\r\n                  \"series_spec\": [\r\n                      {\r\n                          \"label\": \"Anomaly\",\r\n                          \"column\": \"all-baseline\",\r\n                          \"agg\": \"max\",\r\n                          \"type\": \"float\"\r\n                      }\r\n                  ]\r\n              },\r\n              {\r\n                  \"source_label\": \"actual\",\r\n                  \"stream\": \"oia-ml-metrics-regression-output\",\r\n                  \"ts_column\": \"timestamp\",\r\n                  \"color\": \"#42A5F5\",\r\n                  \"extra_filter\": data_filter,\r\n                  \"series_spec\": [\r\n                      {\r\n                          \"label\": \"Actual\",\r\n                          \"column\": \"all-baseline\",\r\n                          \"agg\": \"max\",\r\n                          \"type\": \"float\"\r\n                      }\r\n                  ]\r\n              }\r\n          ],\r\n          \"filterTags\": [\r\n              {\r\n                  \"label\": metric_source,\r\n                  \"value\": metric_source\r\n              }\r\n          ],\r\n          \"widget_id\": asset_id + \"_\" + metric_id\r\n        } %}\r\n        {% set x = dashboard[\"dashboard_sections\"][0][\"widgets\"].append(widget) %}\r\n      {% endfor %}\r\n    {% else %}\r\n      {% set x = logger.warning(\"No assets hence no metrics for incident: \" + incidentid) %}\r\n    {% endif %}\r\n  {% else %}\r\n    {% set x = logger.warning(\"Skipping metric widget generation as timestamp details could not be constructed for incident: \" + incidentid) %}\r\n  {% endif %}\r\n{% else %}\r\n  {% set x = logger.warning(\"Can not find incident details hence can not show metrics for incident: \" + incidentid) %}\r\n{% endif %}\r\n{% set x = logger.debug(\"Final metrics dashboard: \" + str(dashboard)) %}\r\n"
        }
    ]
}
