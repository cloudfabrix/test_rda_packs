%% stream = no and limit = 0
%%template_type="jinja"

%%start_inline_object name="context_dynamic_form" and type="data" and format="json"
{
    "formFieldList": [
        {
            "fieldId": "customer_tag",
            "label": "Tag of the customer",
            "required": false,
            "dataType": "string"
        }
    ]
}
%%end_inline_object

@dm:empty
    --> @dm:save name = "temp-customer-context"


## {% set row = "" %}

      {% if customer_tag %} 
      {% set customer_id = customer_id %}
      {% set customer_tag = customer_tag %}
      {% set customerTag = customer_tag %}
      {% set customerId = customer_id %}
      {% set network_name = network_name %}
   {% elif customerTag %} 
      {% set customer_id = customerId %}
      {% set customer_tag = customerTag %}
   {% else %}
      {% set customer_id = '' %}
      {% set customer_tag = '' %}
   {% endif %}   


--> @c:new-block
    --> @dm:empty
    --> @exec:get-input
    ##--> @dm:save name="test-input-devices"
   --> @dm:eval key ="'key'" 
   --> @dm:save name ="temp-input-data"
    --> @dm:save name ="temp-input-dataset"
     {% if customer_tag %} 
         --> @dm:save name="{{customer_tag}}-{{network_name}}-import-devices"
    {% else %}
        --> @dm:save name="{{network_name}}-import-devices"
    {% endif %}


--> @c:new-block
    {% if customer_tag %}  
         --> @dm:recall name="{{customer_tag}}-{{network_name}}-import-devices" and return_empty = "yes"
    {% else %}
        --> @dm:recall name="{{network_name}}-import-devices" and return_empty = "yes"
    {% endif %} 
    --> @dm:replace-data columns="fileUpload" and expr="'" and replace='"'
    --> @dm:to-type columns="replace" and type="str"
    --> @dm:explode-json column="fileUpload"
    --> @dm:save name ="temp-input-dataset"


    --> @c:new-block
    --> @dm:empty
    {% if customer_tag %} 
         --> #dm:query-persistent-stream customer_tag is '{{customer_tag}}' and (network_name is '{{network_name}}') with-input name = "multi_discovery" & limit = "0"
    {% else %} 
        --> #dm:query-persistent-stream customer_tag is empty and (network_name is '{{network_name}}') with-input name = "multi_discovery" & limit = "0"
    {% endif %} 
    
    --> @dm:save name ="temp-customer-old-data"

--> @c:new-block

--> @c:data-loop dataset="temp-input-dataset" and columns="bucketName,objectName"
    --> @dm:recall name="temp-input-dataset" and return_empty = "yes"
    --> *dm:filter replace=="True"
    --> @dm:skip-block-if-shape row_count="0"
    --> @dm:get-from-location path="$bucketName/$objectName"
    ## --> @dm:tail n = 1
    --> @dm:check-columns must_contain="device_ip" and action="fail"
    --> @dm:dedup columns="device_ip"
    --> @dm:save name="temp-uploaded-file-data"
    ##--> @dm:save name="$dataset_name"
    ##--> @dm:save  name="test-discovery2"
    --> @dm:eval key ="'key'" 
  ## --> @dm:eval customer_tag ="'{{customer_tag}}'"
  ##     --> @dm:eval customer_id ="'{{customer_id}}'"
                --> @dm:enrich dict = "temp-input-data" & src_key_cols = "key" & dict_key_cols="key" & enrich_cols = "customer_tag,customer_id,network_name"

      ##--> @dm:save  name="test-discovery"

    --> @rn:write-stream name="multi_discovery"
    --> @dm:skip-pipeline-if-shape row_count > 0

--> @c:new-block

--> @c:data-loop dataset="temp-input-dataset" and columns="bucketName,objectName"
    --> @dm:recall name="temp-input-dataset" and return_empty = "yes"
    --> *dm:filter replace=="False"
    --> @dm:skip-block-if-shape row_count="0"
    --> @dm:get-from-location path="$bucketName/$objectName"
    --> @dm:check-columns must_contain="device_ip" and action="fail"
    ## --> @dm:head n = 1
    --> @dm:save name="temp-uploaded-file-data"
    --> @dm:recall name ="temp-customer-old-data" and return_empty = "yes"
    --> @dm:save name="temp-uploaded-file-data" and append= "yes"
    --> @dm:recall name="temp-uploaded-file-data" and return_empty = "yes"
    --> @dm:dedup columns="device_ip"
   ## --> @dm:save name="$dataset_name"
    --> @dm:eval key ="'key'" 
   ## --> @dm:eval customer_tag ="'{{customer_tag}}'"
   ##    --> @dm:eval customer_id ="'{{customer_id}}'"
          --> @dm:enrich dict = "temp-input-data" & src_key_cols = "key" & dict_key_cols="key" & enrich_cols = "customer_tag,customer_id,network_name"

    --> @rn:write-stream name="multi_discovery"

